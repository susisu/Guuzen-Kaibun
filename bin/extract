#!/usr/bin/env node

/*
 * copyright (c) 2015 Susisu
 */

"use strict";

var fs = require("fs");
var palindrome = require("palindrome");
var packageInfo = require("../package.json");

var program = require("commander");

program.version(packageInfo.version, "-v, --version");

program
    .arguments("<file>")
    .action(function (filename) {
        fs.readFile(
            filename, { "encoding": "utf8" },
            function (err, text) {
                if (err) {
                    process.stderr.write(err.toString() + "\n");
                    process.exit(1);
                    return;
                }
                // 記事ごとに区切る
                // ただしファイルへのリンクでも区切られてしまうことがあるので注意
                var articles = text.split(/\n(?=\[\[)/);
                var numArticles = articles.length;
                var title = "";
                for (var i = 0; i < numArticles; i++) {
                    var article = articles[i];
                    // 空なら飛ばす
                    if (article.length === 0) {
                        continue;
                    }
                    // 記事タイトルを取り出す
                    // もしファイルへのリンクだった場合は除く
                    if (/^\[\[(?!(File|ファイル)\:[^\]]*?)([^\]]+?)\]\]\n/.test(article)) {
                        title = /^\[\[([^\]]+?)\]\]\n/.exec(article)[1];
                    }
                    // ファイルへのリンクを代替テキストに置換
                    // リンクを消す
                    // タグを消す
                    // 記号を消す（コマンドがバグるため応急処置。文章には影響はあまりないと思う）
                    article =
                        article.replace(/\[\[(File|ファイル)\:.*?\|.*?\|.*?\|(.*?)\]\]/g, "$1")
                            .replace(/\[\[([^\]]*?\|)?([^\]]*?)\]\]/g, "$2")
                            .replace(/[<\[]].*?[>\]]|[<\[]]\/.*?[>\]]/g, "")
                            .replace(/[;\|\*<>\{\}`]/g, "");
                    // 節ごとに区切る
                    var secs = article.split(/\n(?=\=\=)/);
                    var numSecs = secs.length;
                    for (var j = 0; j < numSecs; j++) {
                        var sec = secs[j];
                        // 記号を消す
                        sec = sec.replace(/\=/g, "");
                        // 回文抽出
                        var ps = palindrome.extract(sec, 5);
                        for (var k = 0; k < ps.length; k++) {
                            // 回文, 音数, 記事タイトル, ファイル名, 行番号, 行数
                            process.stdout.write(
                                ps[k][0] + "\t" +
                                ps[k][1] + "\t" +
                                title + "\t" +
                                filename + "\t" +
                                i.toString() + "\t" +
                                numArticles.toString() + "\n"
                            );
                        }
                    }
                }
            }
        );
    });

program.parse(process.argv);

if (program.args.length === 0) {
    program.help();
}
